{
  "added": {},
  "modified": {},
  "deleted": {
    "v3trans.sizingTool": {
      "title": "Milvus Sizing Tool",
      "subTitle": "Note: all the recommendations are calculated based on our lab data, you should adjust it with your own testing before deploying to production.",
      "labels": {
        "dataSize": "Choose data size",
        "vector": "Number of vectors (Million)",
        "dimension": "Dimensions",
        "index": "Index Type",
        "indexType": "Choose index type",
        "indexParam": "Choose index parameters",
        "m": "M (Maximum degree of the node)",
        "segmentSize": "Choose segment size",
        "segment": "Segment (MB)"
      },
      "capacity": "Approximate capacity",
      "memory": "Loading Memory",
      "fileSize": "Raw file size",
      "setups": {
        "title": "Minimum Milvus cluster setup",
        "rootCoord": {
          "title": "Root Coord",
          "tooltip": "Root coord handles data definition language (DDL) and data control language (DCL) requests, such as create or delete collections, partitions, or indexes, as well as manage TSO (timestamp Oracle) and time ticker issuing."
        },
        "queryCoord": {
          "title": "Query Coord",
          "tootip": "Query coord manages topology and load balancing for the query nodes, and handoff from growing segments to sealed segments."
        },
        "dataCoord": {
          "title": "Data Coord",
          "tooltip": "Data coord manages topology of the data nodes, maintains metadata, and triggers flush, compact, and other background data operations."
        },
        "indexCoord": {
          "title": "Index Coord",
          "tooltip": "Index coord manages topology of the index nodes, builds index, and maintains index metadata."
        },
        "proxy": {
          "title": "Proxy",
          "tooltip": "Proxy is the access layer of the system and endpoint to users. It validates client requests and reduces the returned results."
        },
        "queryNode": {
          "title": "Query Node",
          "tooltip": "Query node retrieves incremental log data and turn them into growing segments by subscribing to the log broker, loads historical data from the object storage, and runs hybrid search between vector and scalar data."
        },
        "dataNode": {
          "title": "Data Node",
          "tooltip": "Data node retrieves incremental log data by subscribing to the log broker, processes mutation requests, and packs log data into log snapshots and stores them in the object storage."
        },
        "indexNode": {
          "title": "Index Node",
          "tooltip": "Index node builds indexes. Index nodes do not need to be memory resident, and can be implemented with the serverless framework."
        },
        "etcd": {
          "title": "ETCD"
        },
        "minio": {
          "title": "Minio"
        },
        "pulsar": {
          "title": "Pulsar"
        },
        "kafka": {
          "title": "Kafka"
        },
        "bookie": "Bookie",
        "broker": "Broker",
        "proxyLabel": "Proxy",
        "zookeeper": "Zookeeper"
      },
      "buttons": {
        "helm": "Download Helm Chart configuration yml",
        "operator": "Download Milvus Operator configuration yml",
        "guide": "View install guide"
      },
      "installGuide": {
        "helm": "Helm Install Guide",
        "operator": "Operator Install Guide"
      }
    }
  }
}