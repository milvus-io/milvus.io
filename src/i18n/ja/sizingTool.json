{
  "title": "Milvusサイジングツール",
  "content": "リソース要件を見積もり、Milvusデプロイメントの構成を生成するツールです。",
  "tooltip": "<0>注</0>：この構成は経験に基づく最善の見積もりですが、本番環境に移行する前にデータとトラフィックパターンでテストすることをお勧めします。",
  "form": {
    "num": "ベクトルの数",
    "dim": "ベクトルの次元",
    "withScalar": "スカラーフィールドあり",
    "averageLength": "行あたりの平均データサイズ",
    "offloading": "フィールドをディスクにオフロード",
    "mmp": "Milvusは<0>Mmap</0>を使用して、メモリ全体を読み込むことなくディスク上の大きなファイルに直接メモリアクセスを可能にします。",
    "indexType": "インデックスタイプ",
    "indexTypeTip": "ベクトルインデックスを選ぶ方法",
    "indexParam": "インデックスパラメータ",
    "indexParamTip": "適切なインデックスパラメータを設定する方法 <0>詳細を学ぶ</0>。",
    "withRawData": "with_raw_data",
    "m": "M（ノードの最大次数）",
    "nlist": "nlist",
    "maxDegree": "max_degree",
    "segmentSize": "セグメントサイズ",
    "dependencyComp": "依存コンポーネント",
    "mode": "モード",
    "modeTip": "データサイズが増えるにつれて、スタンドアロンモードからクラスターモードにデータを移行できます。<0>詳細</0>。",
    "modeDisableTip": "大規模なデータサイズの場合、クラスターモードのデプロイメントを使用することをお勧めします。これにより、パフォーマンスとスケーラビリティが向上します。",
    "pulsar": "Pulsar",
    "kafka": "Kafka",
    "standalone": "スタンドアロン",
    "standaloneDesc": "小規模から中規模に適しています。",
    "cluster": "分散型",
    "clusterDesc": "大規模に適しています。",
    "segmentTooltip": "datacoord.segment.maxSizeはMilvusの重要なストレージ設定パラメータです。これはMilvusの物理ストレージ単位である1セグメントのサイズを定義します。この値を大きくするとクエリのパフォーマンスが向上しますが、リソースの消費量も増えます。<0>もっと見る.</0>",
    "refine": "リファイン",
    "refineType": "絞り込みタイプ"
  },
  "overview": {
    "title": "リソース要件",
    "explore": "管理サービスコストを探索",
    "overview": "データサイズの計算",
    "raw": "生データサイズ: ",
    "rawTooltip": "ベクトルの数、ベクトルの次元、スカラーフィールドデータサイズによって決まるオリジナルデータのサイズ。",
    "memory": "読み込みメモリ: ",
    "memoryTooltip": "生データサイズ、インデックスタイプ、クエリノードのパラメータによって決まるクエリノードのメモリ消費量。"
  },
  "setup": {
    "title": "セットアップリソース要件",
    "cloud": "管理サービスコストを探索",
    "outOfRange": "大量のデータがあります。デプロイメントのベストプラクティスについては、<0>お問い合わせください</0>。",
    "milvus": {
      "title": "Milvus",
      "proxy": "プロキシ",
      "mixCoord": "Mix Coord",
      "dataNode": "データノード",
      "indexNode": "インデックスノード",
      "queryNode": "クエリノード",
      "diskSize": "<0>ローカルディスク</0>: <1>{{size}}</1>",
      "proxyTip": "プロキシはシステムのアクセス層およびユーザーのエンドポイントです。ヒント：より高いQPSワークロードを処理するために、より多くのリソースを割り当ててください。",
      "mixCoordTip": "Mix Coordはクラスターのバックグラウンドタスクのスケジューリング、メタデータトポロジーの維持、DDL、DCL、TSOの割り当てを担当します。",
      "queryNodeTip": "クエリノードはデータクエリと検索を担当します。ヒント：読み取り集中型のワークロードを処理するために、より多くのリソースを割り当ててください。",
      "dataNodeTip": "データノードはログブローカーにサブスクライブしてインクリメンタルログデータを取得し、ミューテーションリクエストを処理し、ログデータをログスナップショットにパックしてオブジェクトストレージに保存します。ヒント：書き込み集中型のワークロードを処理するために、より多くのリソースを割り当ててください。",
      "indexNodeTip": "インデックスノードはインデックスの構築を担当します。リソース量はインデックス構築の速度に影響を与える可能性があります。実際のニーズに応じてこのリソースを増減させることができます。",
      "standaloneNode": "スタンドアロンノード",
      "streamNode": "ストリーム・ノード",
      "streamNodeTip": "StreamingNodeは全てのストリーミングタスクを処理する。リソースの数は、成長データの検索、データの書き込み、walからbinlogへのデータ変換（ストリーミングデータから履歴データ）など、すべてのストリーミング処理におけるMilvusのスループットとレイテンシに直接影響します。"
    },
    "dependency": {
      "title": "依存関係",
      "etcd": "ETCD",
      "minio": "Minio",
      "pulsar": "Pulsar",
      "kafka": "Kafka",
      "bookie": "Bookie",
      "broker": "Broker",
      "proxy": "Proxy",
      "zookeeper": "Zookeeper",
      "etcdTip": "ETCDはメタデータを保存するために使用されます。最適なパフォーマンスを確保するために、高いディスクパフォーマンスのストレージクラスを指定してください。",
      "apacheTip": "Bookie.JournalおよびZookeeperのために、高いディスクパフォーマンスのストレージクラスを指定して、最適なパフォーマンスを確保してください。",
      "kafkaTip": "Zookeeperのために、高いディスクパフォーマンスのストレージクラスを指定して、最適なパフォーマンスを確保してください。"
    },
    "basic": {
      "cpuAndMemory": "CPUとメモリ: <0>{{cpu}} {{memory}}</0>",
      "storageWithValue": "ストレージ: <0>{{size}}</0>",
      "diskWithValue": "ローカルディスク: <0>{{disk}}</0>",
      "cpu": "CPU",
      "memory": "メモリ",
      "disk": "ローカルディスク",
      "storage": "ストレージ",
      "podNum": "ポッド数",
      "pvc": "ポッドあたりのPVC: <0>{{pvc}}</0>",
      "pvcLabel": "ポッドあたりのPVC",
      "journal": "ジャーナル",
      "ledger": "レジャー",
      "config": "{{cpu}}コア {{memory}} GB",
      "core": "{{cpu}}コア",
      "simpleCore": "{{cpu}} C",
      "gb": "{{memory}} GB",
      "byte": "バイト"
    }
  },
  "install": {
    "title": "Milvusをインストール",
    "helm": "Helmチャート",
    "operator": "Milvusオペレーター",
    "docker": "Docker Compose",
    "adv": "リソースを多く消費していますか？Zilliz Cloud（管理されたMilvus）を試して、リソースを節約し、デプロイメントと運用コストを削減します。Zilliz Cloud計算機で詳細を確認してください。<0>Zilliz Cloud計算機に移動</0>。",
    "adv2": "パフォーマンステストやベンチマーキングのためにMilvusクラスターを設定していますか？詳細なガイダンスについては、<0>VDB Bench</0>を参照してください。",
    "tip1": "Docker ComposeでMilvusを実行する方法",
    "tip2": "HelmチャートでMilvusを実行する方法",
    "tip3": "MilvusオペレーターでMilvusを実行する方法"
  },
  "woodpeckerTip": "<0>Woodpeckerは</0>、Milvus 2.6.0から採用されたクラウドネイティブのWAL（ライト・アヘッド・ログ）システムです。MilvusのMQとしてKafkaとPulsarを置き換えるように設計されており、オペレーションを簡素化し、スループットを最大化し、楽にスケールすることができる。現在のところ、ストリーミング・ノードに組み込まれて稼働している。"
}
