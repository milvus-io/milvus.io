name: Build and deploy to preview

on:
  repository_dispatch:
    types: [dev-deploy]

  push:
    branches:
      - preview
  workflow_dispatch:

env:
  NODE_OPTIONS: '--max_old_space_size=8192'

jobs:
  build:
    runs-on: 'ubuntu-latest'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'preview'

      - name: Verify Nginx configuration
        uses: addnab/docker-run-action@v3
        with:
          image: zilliz/zilliz-web-runner
          options: -v ${{ github.workspace }}/conf/conf.d/client.conf:/etc/nginx/conf.d/client.conf
          run: |
            if nginx -t -c /etc/nginx/nginx.conf; then
              echo "Nginx configuration is valid."
            else
              echo "Nginx configuration is invalid."
              exit 1
            fi
        if: always()

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: update submodules from preview branch
        run: |
          git submodule init
          git submodule update --remote

      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_PWD}}

      - name: Building Milvus site and push to docker hub
        id: build-image
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 2
          retry_on: error
          command: |
            docker build "$GITHUB_WORKSPACE/" -f "Preview.Dockerfile" \
            --build-arg MSERVICE_URL=${{ secrets.MSERVICE_URL }} \
            --build-arg CMS_BASE_URL=${{ secrets.CMS_BASE_URL }} \
            --build-arg REPO_STATICS_KEY=${{ secrets.REPO_STATICS_KEY }} \
            --build-arg INKEEP_API_KEY=${{ secrets.INKEEP_API_KEY }} \
            --build-arg INKEEP_INTEGRATION_ID=${{ secrets.INKEEP_INTEGRATION_ID }} \
            --build-arg INKEEP_ORGANIZATION_ID=${{ secrets.INKEEP_ORGANIZATION_ID }} \
            --build-arg IS_PREVIEW=${{ secrets.PREVIEW_SITE }} \
            -t milvusdb/milvus-io-dev
            docker push milvusdb/milvus-io-dev

  deploy:
    runs-on: amazon-linux-2
    needs: build
    steps:
      - name: Deploy to cluster
        run: |
          echo ${{ secrets.kubeconfig }} > config64
          base64 -d config64 > kubeconfig
          kubectl set image deployment/milvus-io-dev milvus-io-dev=milvusdb/milvus-io-dev -n ued --kubeconfig=kubeconfig
